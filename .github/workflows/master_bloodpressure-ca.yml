# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - bloodpressure-ca
on:
  push:
    branches:
      - Development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      # Run NUnit Testing
      - name: Run NUnit Unit Testing
        run: dotnet test BPCalculator.Tests/BPCalculator.Tests.csproj --collect "Code coverage"

      # Test the Code using Sonar Scanner
      - name: Sonarscanner for dotnet
        uses: Secbyte/dotnet-sonarscanner@v2.3
        with:
          buildCommand: dotnet build .
          projectKey: dfoley84_Calculator
          projectName: Calculator
          sonarOrganisation: dfoley84
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp


  analyze:
    name: Analyze
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix: 
        language: [ 'csharp', 'javascript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

   # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
     
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

#Deploy Net Core app to Azure 
  deploy:
    runs-on: windows-latest
    needs: analyze
    environment:
      name: 'staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'bloodpressure-ca(staging)'
          slot-name: 'staging'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D16DF9738DEF4C678A17CD583CBC8F1C }}
          package: .

  # Run Pen Testing on the Production WebPage
  Owasp:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Web Scanner
        uses: zaproxy/action-baseline@v0.5.0
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          target: 'https://bloodpressure-ca.azurewebsites.net'

  #Run load Testing on the Production Web Server
  k6_load_test:
    name: k6 Load Testing
    runs-on: ubuntu-latest
    needs: Owasp
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run k6 cloud test
        uses: k6io/action@v0.1
        with:
          filename: k6.js
          cloud: true
          token: ${{ secrets.K6_CLOUD_API_TOKEN }}
