# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - bloodpressure-ca

on:
  push:
    branches:
      - Development
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release
        
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        
      - name: Run NUnit Unit Testing
        run: dotnet test BPCalculator.Tests/BPCalculator.Tests.csproj --collect "Code coverage"
        
      - name: Run SpecFlow
        run: dotnet test Spec/Spec.csproj --collect "Code coverage"
        
      - name: Sonarscanner for dotnet
        uses: Secbyte/dotnet-sonarscanner@v2.3
        with:
          buildCommand: dotnet build .
          projectKey: dfoley84_Calculator
          projectName: Calculator
          sonarOrganisation: dfoley84
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
  
  Dependency_Checker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'Calculator'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7            
          # fail if CVSS score (CVE scoring system) is High >=7
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
  
  Deploy_To_Staging:
    runs-on: ubuntu-latest
    needs: Dependency_Checker
    environment:
      name: 'dev'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'bpcalculatorca'
          slot-name: 'dev'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ED6A15782C5C4810A10305AACEA7ADF5 }}
          package: .
  
  k6_load_test:
    name: k6 Load Testing
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run k6 cloud test
        uses: k6io/action@v0.1
        with:
          filename: k6stress.js
          cloud: true
          token: ${{ secrets.K6_CLOUD_API_TOKEN }}

  Owasp:
    runs-on: ubuntu-latest
    needs: k6_load_test
    steps:
      - name: Web Scanner
        uses: zaproxy/action-baseline@v0.5.0
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          target: 'https://bpcalculatorca-dev.azurewebsites.net/'
  
  Selenium:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release
        
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        
      - name: Run NUnit Unit Testing
        run: dotnet test ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp/Selenium.dll /Settings:Selenium.runsettings --collect "Code coverage"

  Deploy_to_Production:
    runs-on: ubuntu-latest
    needs: Selenium
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'bpcalculatorca'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_B0A51289E40F4536BF76DD76860A6580 }}
          package: .
